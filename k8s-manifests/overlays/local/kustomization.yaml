# overlays/local/kustomization.yaml

apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

# 1. Base 리소스와 네임스페이스 지정
resources:
- ../../base
- namespace.yaml

# 2. 로컬 환경 설정
namePrefix: local-
namespace: titanium-local

# 3. 로컬에서는 모든 서비스를 1개씩만 실행
replicas:
- name: api-gateway-deployment
  count: 1
- name: auth-service-deployment
  count: 1
- name: dashboard-ui-deployment
  count: 1
- name: load-balancer-deployment
  count: 1
- name: user-service-deployment
  count: 1
- name: redis-deployment
  count: 1
- name: blog-service-deployment
  count: 1

# 4. 로컬 환경 변수 추가
configMapGenerator:
- name: app-config
  behavior: merge
  literals:
  - ENVIRONMENT=local
  - LOG_LEVEL=DEBUG
  - DEBUG_MODE=true
  - CORS_ALLOWED_ORIGINS=*
  - API_GATEWAY_URL=http://local-api-gateway-service:8000
  - USER_SERVICE_URL=http://local-user-service:8001
  - AUTH_SERVICE_URL=http://local-auth-service:8002
  - BLOG_SERVICE_URL=http://local-blog-service:8005
  # ANALYTICS_SERVICE_URL 항목 제거 (analytics-service 삭제)
  - DASHBOARD_UI_URL=http://local-dashboard-ui-service:80
  - LOAD_BALANCER_URL=http://local-load-balancer-service:7100
  - REDIS_HOST=local-redis-service

# 5. 간단한 패치들
patches:
  # 외부 접근을 위해 Load Balancer를 NodePort로 변경
  - target:
      kind: Service
      name: load-balancer-service
    patch: |-
      - op: replace
        path: /spec/type
        value: NodePort
      - op: add
        path: /spec/ports/0/nodePort
        value: 30700

  # 로컬 개발: 이미지를 다시 다운로드하지 않음
  - target:
      kind: Deployment
    patch: |-
      - op: replace
        path: /spec/template/spec/containers/0/imagePullPolicy
        value: IfNotPresent

  # 로컬용 작은 스토리지
  - target:
      kind: PersistentVolumeClaim
      name: user-service-data-pvc
    patch: |-
      - op: replace
        path: /spec/resources/requests/storage
        value: 100Mi
